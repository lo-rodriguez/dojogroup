app.version=KJI
app.developers= Lorenzo Rodriguez (lrodriguez71@gmail.com), Jorge Vega (jvega_9@hotmail.com) 
app.licence=MIT (https://opensource.org/licenses/MIT)
#https://github.com/kolorobot/spring-mvc-quickstart-archetype
app.student.addstudent.message.correctly=Se ha dado de alta al estudiante {firstName} con el n\u00famero de inscripci\u00f3n {id}
app.student.editstudent.message.correctly=Se ha actualizado al estudiante {firstName} con el n\u00famero de inscripci\u00f3n {id}
app.studentPayment.message.correctly= Se ha dado de alta al pago {productsName} al estudiante {firstName}
# Set here configurations for the database connection
spring.datasource.url=jdbc:mariadb://localhost:3306/dbbzk
spring.datasource.username=********
spring.datasource.password=*********
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dial.ect=org.hibernate.dialect.MySQL5InnoDBDialect
